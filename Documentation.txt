> - Move Pointer Right

< - Move Pointer Left

^ - Move Pointer Up (Drawing Mode)

_ - Move Pointer Down (Reset Cell - Memory Mode)

. - Place Pixel (Add One - Memory Mode)

, - Delete Pixel (Substract One - Memory Mode)

: - Push current memory cell onto Stack

; - Pop from the Stack to the current memory cell

! - Toggle Mode (Draw, Memory)

@ - Move Pointer to a location X,Y (Push onto stack X then Y and then use this)

~ - Clear Stack

% - Display Buffer

* - End Program

/ - ALU (Devide, Substact, Add, Mulitply - MORE EFFICIENT than the Brainfuck way | Push onto stack: Function, N1, N2 | Output will be saved to the current memory cell)

ALU Functions:
1 - Add
2 - Substract
3 - Multiply
4 - Devide
5 - RNG (Random Number Generator)

- (Dash is used to call a special function of a letter, supported letters:  ; POP FROM TOP | ~ CLEAR DRAWING SCREEN | $ INPUT NUMBER TO CURRENT MEMORY CELL | . DRAW TO BUFFER | , PRINT ASCII | # CLEAR BUFFER | -: TOGGLE BETWEEN STACK #1 AND #2)

$ - Waits for the user to click on the screen. (Pushes the X, Y coordinates onto the stack for use and moves the pointer to the location you clicked.)

# - Compare (Push onto stack: Comparation Mode, N1, N2 | Output will be saved to the current memory cell, 1 = True, 0 = False)

[ <code> ] - Runs code inside only if the current memory cell is greater than 0! (Inspired by Brainfuck)

{ <code> } - Loops the code inside while the current memory cell is greater than 0! (Inspired by Brainfuck too)

Comparation Modes:
1 - Equals
2 - Not Equals
3 - Greater
4 - Lower
